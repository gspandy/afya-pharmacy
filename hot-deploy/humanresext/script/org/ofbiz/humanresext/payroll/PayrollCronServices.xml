<?xml version="1.0" encoding="UTF-8" ?>

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
        xsi:noNamespaceSchemaLocation="http://ofbiz.apache.org/dtds/simple-methods.xsd">
    	
    	<simple-method method-name="processEmplSalForNextFiscal" short-description="Processing all the employee's sal for next fiscal">
			<entity-condition list="employees" entity-name="PartyPayGrade" distinct="true">
				<condition-expr field-name="isCurrent" value="Y"/>
				<order-by field-name="lastUpdatedStamp"/>
			</entity-condition>
			<log level="always" >
				<string value="${employees}"/>
			</log>
			<iterate entry="payScale" list="employees">
				<set field="payGradeId" value="${payScale.payGradeId}"/>
				<set field="salaryStepSeqId" value="${payScale.salaryStepSeqId}"/>
				
				<entity-one value-field="salaryStep" entity-name="SalaryStep">
					<field-map field-name="payGradeId" from-field="payGradeId"/>
					<field-map field-name="salaryStepSeqId"/>
				</entity-one>					
				
				<log level="always">
					<string value="${salaryStep}"></string>
				</log>
				
				<set field="baseAmount" value="${salaryStep.minAmount}"/>
				<set field="incrementAmount" value="${salaryStep.incrementBy}"/>
				<set field="maxRevision" value="${salaryStep.revisions}"/>
				<set field="nextSalaryStepSeqId" value="${salaryStep.nextSalaryStepSeqId}"/>
				<if>
					<condition>
						<if-compare operator="greater-equals" field="maxRevision" value="${payScale.revision}"/>
					</condition>
					<then>
						<set field="payScale.isCurrent" value="N"/>
						<store-value value-field="payScale"/>
						<set field="payScale.revision" value="${payScale.revision+1}"/>
						<set field="payScale.isCurrent" value="Y"/>
						<create-value  value-field="payScale"/>
					</then>				
			   		<else-if>
			   			<condition>
			   				<not> <if-empty field="nextSalaryStepSeqId"></if-empty> </not>
			   			</condition>
			   			<then>
			   				<log level="always">
			   					<string value="${nextSalaryStepSeqId}"></string>
			   				</log>
			   				<set field="payScale.isCurrent" value="N"/>
							<store-value value-field="payScale"/>
							<set field="payScale.salaryStepSeqId" from-field="nextSalaryStepSeqId"/>
			   				<set field="payScale.revision" value="0"/>
			   				<set field="payScale.isCurrent" value="Y"/>
			   				<create-value  value-field="payScale"/>
			   				<log level="always">
			   					<string value="NEW PARTY ${payScale}"></string>
			   				</log>
			   			</then>
			   		</else-if>
			   		<else>
			   			<entity-one value-field="currPayGrade" entity-name="PayGrade">
			   				<field-map field-name="payGradeId" from-field="payGradeId"/>
			   			</entity-one>
			   			
			   			<log level="always">
			   				<string value="CURRENT PAY GRADE ${currPayGrade.payGradeId}"></string>
			   			</log>
			   			
			   			<set field="nextPayGradeId" value="${currPayGrade.nextPayGradeId}"/>
			   			
			   			<log level="always">
			   				<string value="NEXT PAY GRADE ${nextPayGradeId}"></string>
			   			</log>
			   			
			   			<entity-condition list="salSteps" entity-name="SalaryStep">
			   				<condition-expr field-name="payGradeId" operator="equals" from-field="nextPayGradeId"/>
			   				<order-by field-name="minAmount"/>
			   			</entity-condition>
			   			
			   			
			   			
			   			<first-from-list entry="nextSalaryStepSeq" list="salSteps"/>
			   			
			   			
			   			<log level="always">
			   				<string value="NEXT SAL STEP SEQ ${nextSalaryStepSeq}"></string>
			   			</log>
			   			<set field="payScale.isCurrent" value="N"/>
						<store-value value-field="payScale"/>
						<set field="payScale.salaryStepSeqId" from-field="nextSalaryStepSeq.salaryStepSeqId"/>
		   				<set field="payScale.payGradeId" from-field="nextSalaryStepSeq.payGradeId"/>
		   				<set field="payScale.revision" value="0"/>
		   				<set field="payScale.isCurrent" value="Y"/>
		   				<create-value  value-field="payScale"/>
			   			
			   		</else>
			   		
			   </if>
			   
			   
			 </iterate>
			    	
    	</simple-method>
</simple-methods>