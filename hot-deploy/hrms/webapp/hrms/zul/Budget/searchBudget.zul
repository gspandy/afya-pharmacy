<?init class="org.zkoss.zk.ui.util.Composition" arg0="/WEB-INF/layout/templateWestCollapsible.zul"?>
<?page title="HRMS-Budget" id="budgetMgmt"?>
<?link rel="icon" type="image/x-icon" href="/images/companyLogo.png"?>
<?taglib uri="http://www.zkoss.org/dsp/web/core" prefix="c"?>
<zk>
	
	<groupbox self="@{define(westContent)}" mold="3d">
	<caption label="Budget" />
	<vbox>
	<toolbarbutton label="${c:l('HRMS_BUDGET') }" id="budgetToolbarButton" onCreate="searchBudgetItem();">
	<attribute name="onClick">
	Div div = (Div) appendDiv;
	Component firstChild = div.getFirstChild();
	if (firstChild != null) {
		div.removeChild(firstChild);
	}
	Window winDiv1 = (Window) Executions.createComponents(
			"/zul/Budget/searchBudgetPage.zul", null, org.ofbiz.base.util.UtilMisc.toMap("budgetToolbarButton",budgetToolbarButton));
	div.appendChild(winDiv1);
	unselectedToolbarbuttonColor(self);
	selectedToolbarbuttonColor(self);
	</attribute>
	</toolbarbutton>
	<zscript>
	void searchBudgetItem(){
	Div div = (Div) appendDiv;
	Component firstChild = div.getFirstChild();
	if (firstChild != null) {
		div.removeChild(firstChild);
	}
	Window winDiv1 = (Window) Executions.createComponents(
			"/zul/Budget/searchBudgetPage.zul", null,org.ofbiz.base.util.UtilMisc.toMap("budgetToolbarButton",budgetToolbarButton));
	div.appendChild(winDiv1);
	unselectedToolbarbuttonColor(self);
	selectedToolbarbuttonColor(self);
	}
	</zscript>
	<toolbarbutton label="${c:l('HRMS_BUDGETITEM') }" id="budgetItemToolbarButton">
	<attribute name="onClick">
	Div div = (Div) appendDiv;
		Component firstChild = div.getFirstChild();
		if (firstChild != null) {
			div.removeChild(firstChild);
		}
		Window winDiv3 = (Window) Executions
				.createComponents(
						"/zul/Budget/searchBudgetItem.zul",
						null,org.ofbiz.base.util.UtilMisc.toMap("budgetItemToolbarButton",budgetItemToolbarButton));
		div.appendChild(winDiv3);
		unselectedToolbarbuttonColor(self);
	selectedToolbarbuttonColor(self);
	</attribute>
	</toolbarbutton>
	</vbox>
	</groupbox>
		
		<div id="appendDiv" self="@{define(content)}">
		
		</div>
	
</zk>