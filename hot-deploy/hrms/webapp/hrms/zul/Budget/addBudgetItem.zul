<?taglib uri="http://www.zkoss.org/dsp/web/core" prefix="c"?>
<zk>
	<zscript>
	<![CDATA[
	import org.ofbiz.entity.*;
	GenericDelegator delegator = com.ndz.zkoss.util.HrmsInfrastructure.getDelegator();//GenericDelegator.getGenericDelegator("default");
	Set fieldToSelect = new HashSet();
	fieldToSelect.add("budgetId");
	Set budgetItemToSelect = new HashSet();
	budgetItemToSelect.add("budgetItemTypeId");
	budgetItemToSelect.add("description");
	List budgetList = null;
	budgetList = delegator.findList("Budget", null, fieldToSelect, null, null,
			false);
	budgetList.add(0, null);
	budgetArray = budgetList.toArray(new GenericValue[budgetList.size()]);
	SimpleListModel budgetModel = new SimpleListModel(budgetArray);
	List budgetItemTypeList = null;
	budgetItemTypeList = delegator.findList("BudgetItemType", null,
			budgetItemToSelect, null, null, false);
	budgetItemTypeList.add(0, null);
	budgetItemTypeArray = budgetItemTypeList
			.toArray(new GenericValue[budgetItemTypeList.size()]);
	SimpleListModel budgetItemTypeModel = new SimpleListModel(
			budgetItemTypeArray);
	public class BudgetItemRenderer implements ListitemRenderer {

		public BudgetItemRenderer() {
		}

		public void render(Listitem li, Object data) {
			if (data instanceof GenericValue) {
				GenericValue val = (GenericValue) data;
				li.setLabel(val.getString("budgetId"));
				li.setValue(val.getString("budgetId"));
			}
		}
	}
	ListitemRenderer budgetItemRenderer = new BudgetItemRenderer();
	public class BudgetItemTypeRenderer implements ListitemRenderer {

		public BudgetItemTypeRenderer() {
		}

		public void render(Listitem li, Object data) {
			if (data instanceof GenericValue) {
				GenericValue val = (GenericValue) data;
				li.setLabel(val.getString("description"));
				li.setValue(val.getString("budgetItemTypeId"));
			}
		}
	}
	ListitemRenderer budgetItemTypeRenderer = new BudgetItemTypeRenderer();
]]>
</zscript>
	<window id="addBudgetItemWindow" closable="true" width="40%"
		height="55%" border="normal">
		<caption label="${c:l('FormFieldTitle_addBudgetItem')}" />
		<separator height="20px" />
		<hbox>
			<div align="right" width="150px">
				<label value="${c:l('FormFieldTitle_budgetId')}"  />
				<label value="*" style="color:red" />
			</div>
			<div align="right">
				<listbox id="budgetId" mold="select"
					model="${budgetModel}" itemRenderer="${budgetItemRenderer}" onSelect="Clients.closeErrorBox(self)"/>
			</div>
		</hbox>
		<separator />
		<hbox>
			<div align="right" width="150px">
				<label value="${c:l('FormFieldTitle_budgetItemType')}"
					 />
					 <label value="*" style="color:red" />
			</div>
			<div align="right">
				<listbox id="budgetItemTypeId"
					model="${budgetItemTypeModel}" mold="select"
					itemRenderer="${budgetItemTypeRenderer}" onSelect="Clients.closeErrorBox(self)"/>
			</div>
		</hbox>
		<separator />
		<hbox>
			<div align="right" width="150px">
				<label value="${c:l('FormFieldTitle_amount')}"  />
				<label value="*" style="color:red" />
			</div>
			<div align="right">
				<textbox id="amount" constraint="no empty:Amount Required"/>
			</div>
		</hbox>
		<separator />
		<hbox>
			<div align="right" width="150px">
				<label value="${c:l('FormFieldTitle_purpose')}"  />
				<label value="*" style="color:red" />
			</div>
			<div align="right">
				<textbox id="purpose" rows="3" cols="30" constraint="no empty:Purpose Required"/>
				
			</div>
		</hbox>
		<separator />
		<hbox>
			<div align="right" width="150px">
				<label value="${c:l('FormFieldTitle_justification')}"  />
				<label value="*" style="color:red" />
			</div>
			<div align="right">
				<textbox id="justification" rows="3" cols="30"  />
			</div>
		</hbox>
		<separator />
		<zscript>
		<![CDATA[
		         void validate(){
		        	 if(budgetId.getSelectedItem()==null)
		        		 throw new WrongValueException(budgetId,"Budget Id Required");
		        	 if(budgetItemTypeId.getSelectedItem() == null)
		        		 throw new WrongValueException(budgetItemTypeId,"Budget Item Type Required");
		        	 if(budgetId.getSelectedItem().getValue()==null)
		        		 throw new WrongValueException(budgetId,"Budget Id Required");
		        	 
		        	 if(justification.getValue()=="")
		        		 throw new WrongValueException(justification,"Justification Required");
		        	 if(budgetItemTypeId.getSelectedItem().getValue() == null)
		        		 throw new WrongValueException(budgetItemTypeId,"Budget Item Type Required");
		        	 
		        		 
		        		 if(!org.ofbiz.base.util.UtilValidate.isNonnegativeDouble(amount.getValue().toString())){

			throw new WrongValueException(amount, "Amount must be numeric");
			}
		        	 amount.getValue();
		        	 purpose.getValue();
		        	 
                         java.lang.Double price =  java.lang.Double.valueOf(amount.getValue());
		        	 List budgetInPeriod = delegator.findByAnd("BudgetItem",
				org.ofbiz.base.util.UtilMisc.toMap("budgetId",budgetId.getSelectedItem().getValue(),"budgetItemTypeId",
						budgetItemTypeId.getSelectedItem().getValue(),"amount",java.math.BigDecimal.valueOf(price),"purpose",purpose.getValue()));
		        	 if(budgetInPeriod.size()>0)
		        	 			throw new WrongValueException(add, "Budget Item with Same Values Already Exists");
		         }
	]]>
		</zscript>
		<hbox>
			<div align="right" width="270px">
				<button id="add" label="${c:l('btnSave')}"
					onClick='validate();com.ndz.controller.BudgetManagementController.createBudgetItem(event);
					Component componetPath = Path.getComponent("/searchPanel//searchButton");
					if(componetPath != null)
					Events.postEvent("onClick", componetPath, null);
					addBudgetItemWindow.detach();' />
				<button id="cancel" label="${c:l('ButtonCancel')}"
					onClick="addBudgetItemWindow.detach();" />
			</div>
		</hbox>
	</window>
</zk>