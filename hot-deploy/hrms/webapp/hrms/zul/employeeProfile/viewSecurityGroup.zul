<?taglib uri="http://www.zkoss.org/dsp/web/core" prefix="c"?>
<zk>
	<zscript>
<![CDATA[
	import org.ofbiz.entity.*;
	import org.ofbiz.entity.condition.EntityCondition;
	import org.ofbiz.entity.condition.EntityExpr;
	import org.ofbiz.entity.condition.EntityOperator;
	import org.ofbiz.base.util.*;
	import java.util.*;
	import org.zkoss.util.resource.Labels;
	GenericValue userLogin = (GenericValue) Executions.getCurrent().getDesktop().getSession().getAttribute("userLogin");
	GenericDelegator delegator = userLogin.getDelegator();
	String partyId = (String) Executions.getCurrent().getArg().get("partyId");
	String userLoginId = null;
	GenericValue userLoginGv = null;
	List userLoginList = delegator.findByAnd("UserLogin", UtilMisc.toMap("partyId", partyId));
if (userLoginList.size() > 0) {
	userLoginGv = org.ofbiz.entity.util.EntityUtil.getFirst(userLoginList);
	userLoginId = userLoginGv.getString("userLoginId");
}
	EntityCondition condition1 = EntityCondition.makeCondition("userLoginId", EntityOperator.EQUALS, userLoginId);
	EntityCondition condition2 = EntityCondition.makeCondition("groupId", EntityOperator.NOT_EQUAL, "HRMS");
	EntityCondition condition = EntityCondition.makeCondition(new EntityCondition[] { condition1, condition2 });
	List orderBy = new LinkedList();
orderBy.add("-fromDate");
	List userLoginSecurityGroupList = delegator.findList("UserLoginSecurityGroup", condition, null, orderBy, null,
			false);
	class MyRowRenderer implements RowRenderer {

		MyRowRenderer() {
		}

		public void render(Row row, Object data) {
		org.ofbiz.entity.GenericValue gv = ((org.ofbiz.entity.GenericValue) data);
		if (gv.getString("groupId") != "HRMS") {
			Button btn = new com.ndz.zkoss.HrmsButton();
			if (gv.getString("groupId") != null) {
				String isReqAdmin = gv.getString("isRequisitionAdmin");
				String groupidStr = gv.getString("groupId");
				if (groupidStr.equals("HUMANRES_USER")) {
					new Label("Employee").setParent(row);
				} else
					if (groupidStr.equals("HUMANRES_MGR")) {
						if (isReqAdmin != null && isReqAdmin.equals("Y")) {
							new Label("Requisition Administrator").setParent(row);
						} else {
							new Label("Manager").setParent(row);
						}
					} else
						if (groupidStr.equals("HUMANRES_ADMIN")) {
							new Label("Administrator").setParent(row);
						} else
							if (groupidStr.equals("HRMS")) {
								new Label("HRMS VIEW").setParent(row);
							} else {
								new Label(gv.getString("groupId")).setParent(row);
							}

				if (gv.getString("fromDate") != null) {
					Date fromDate = new Date(gv.getTimestamp("fromDate").getTime());
					new Label(UtilDateTime.formatDate(fromDate)).setParent(row);
				} else {
					new Label("").setParent(row);
				}
				if (gv.getString("thruDate") != null) {
					Date thruDate = new Date(gv.getTimestamp("thruDate").getTime());
					new Label(UtilDateTime.formatDate(thruDate)).setParent(row);
					//new Label(gv.getString("thruDate")).setParent(row);
				} else {
					new Label("").setParent(row);
					btn.setVisible(true);
				}
				if (isAdmin == true) {
					btn.setLabel(Labels.getLabel("ButtonDelete"));
					btn.setParent(row);
					btn.setSclass("btnDelete");
					btn.addEventListener("onClick", new org.zkoss.zk.ui.event.EventListener() {
						public void onEvent(Event event) throws Exception {
						com.ndz.controller.UpdateEmployeeProfileController.removeSecurityGroup(event, gv, userLoginId);
						}
					});
				}

			}

		}
		}
	}
	RowRenderer roleRenderer = new MyRowRenderer();
	SimpleListModel modelRoles = new SimpleListModel(userLoginSecurityGroupList);
	boolean sameUser = (Boolean) Executions.getCurrent().getArg().get("sameUser");
	org.ofbiz.security.Security security = (org.ofbiz.security.Security) requestScope.get("security");
	boolean isAdmin = security.hasPermission("HUMANRES_ADMIN", userLogin);
	boolean isManager = security.hasPermission("HUMANRES_MGR", userLogin);
	boolean anyOne = false;
if (isAdmin || isManager || sameUser) {
	anyOne = true;
}
]]>
</zscript>
	<window id="roleWindow">
		<grid rowRenderer="${roleRenderer}" model="${modelRoles}">
			<columns menupopup="auto">
				<column label="${c:l('HRMS_GROUP_ID') }" />
				<column label="${c:l('HRMS_FROMDATE') }" />
				<column label="${c:l('HRMS_THRUDATE') }" />
				<column label="${c:l('HRMS_ACTION') }" if="${isAdmin }" />
			</columns>
		</grid>
	</window>
</zk>
