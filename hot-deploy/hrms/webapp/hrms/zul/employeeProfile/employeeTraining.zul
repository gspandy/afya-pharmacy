<?taglib uri="http://www.zkoss.org/dsp/web/core" prefix="c"?>
<zk>
	<zscript>
		<![CDATA[
			import org.ofbiz.entity.*;
			import org.ofbiz.entity.condition.*;
			import org.ofbiz.base.util.*;
			import java.util.*;
			import org.zkoss.util.resource.Labels;
			GenericValue userLogin = (GenericValue) Executions.getCurrent()
					.getDesktop().getSession().getAttribute("userLogin");
			GenericDelegator delegator = com.ndz.zkoss.util.HrmsInfrastructure.getDelegator();//GenericDelegator.getGenericDelegator("default");
			Map map = Executions.getCurrent().getArg();
			String partyId = (String) map.get("partyId");
			EntityCondition condition = new EntityExpr("partyId",
					EntityOperator.EQUALS, partyId);
			Set fieldToSelect = new HashSet();
			fieldToSelect.add("trainingClassTypeId");
			fieldToSelect.add("fromDate");
			fieldToSelect.add("thruDate");
			fieldToSelect.add("partyId");
			List employeeSkills = null;
			employeeSkills = delegator.findList("PersonTraining", condition,
					fieldToSelect, null, null, false);
			class MyRowRenderer implements RowRenderer {
		
				MyRowRenderer() {
				}
		
				public void render(Row row, Object data) {
					org.ofbiz.entity.GenericValue gv = ((org.ofbiz.entity.GenericValue) data);
					//new Label(gv.getString("trainingClassTypeId")).setParent(row);
					GenericValue trainingClassTypeGV = delegator.findByPrimaryKey("TrainingClassType",UtilMisc.toMap("trainingClassTypeId",gv.getString("trainingClassTypeId")));
					new Label(trainingClassTypeGV.getString("description")).setParent(row);
					
					new Label(gv.getString("fromDate")).setParent(row);
					new Label(gv.getString("thruDate")).setParent(row);
					Button btn = new Button();
					btn.setMold("os");
					btn.setWidth("60px");
					btn.setStyle("border-style:1px solid");
					btn.setSclass("btnStyle");
					btn.setLabel(Labels.getLabel("ButtonDelete"));
					btn.setParent(row);
					btn.setSclass("btnDelete");
					btn.addEventListener("onClick",
							new org.zkoss.zk.ui.event.EventListener() {
								public void onEvent(Event event) throws Exception {
									com.ndz.controller.UpdateEmployeeProfileController
											.deleteTraining(event, gv);
									Events.postEvent("onClick",tlbarBtn,null);
								}
							});
					new Label(gv.getString("partyId")).setParent(row);
					row.addEventListener("onDoubleClick",
							new org.zkoss.zk.ui.event.EventListener() {
								public void onEvent(Event event) throws Exception {
									com.ndz.controller.UpdateEmployeeProfileController
											.showUpdateTrainingWindow(event, gv);
								}
							});
				}
			}
			RowRenderer tableRenderer = new MyRowRenderer();
			SimpleListModel model = new SimpleListModel(employeeSkills);
			boolean sameUser = Executions.getCurrent().getArg().get("sameUser");
			org.ofbiz.security.Security security = requestScope.get("security");
			boolean isAdmin = security.hasPermission("HUMANRES_ADMIN", userLogin);
			boolean isManager = security.hasPermission("HUMANRES_MGR", userLogin);
			boolean anyOne = false;
			if (isAdmin || isManager || sameUser) {
				anyOne = true;
			}
		]]>
	</zscript>
	<zscript>
		import org.zkoss.zul.*;
		Div  div1 = (Div)Executions.getCurrent().getArg().get("window");
		Toolbarbutton tlbarBtn = (Toolbarbutton)div1.getFellow("trainingInformationBtn");
	</zscript>
	<window id="skillWindow">
		<grid width="100%" rowRenderer="${tableRenderer}"
			model="${model}">
			<columns menupopup="auto">
				<column label="${c:l('HRMS_TRAINING_CLASS_TYPE_ID') }"
					style="font-weight:bold" />
				<column label="${c:l('HRMS_FROMDATE') }" style="font-weight:bold" />
				<column label="${c:l('HRMS_THRUDATE') }" style="font-weight:bold" />
				<column label="${c:l('ButtonDelete') }" visible="false"></column>
				<column label="${c:l('Hrms_EmployeeId') }" style="font-weight:bold"
					visible="false" />

			</columns>
		</grid>
	</window>
</zk>
