<?component name="findbox" macroURI="../macros/textfindMacro.zul" id="macro1"?>
<?component name="fromDatebox" macroURI="../macros/datefindMacro.zul" id="macro2"?>
<?component name="thruDatebox" macroURI="../macros/datefindMacro.zul" id="macro3"?>
<?component list="${claimTypesList}" renderer="${claimTypeItemRenderer}" name="selectbox" macroURI="../macros/findselectbox.zul" id="macro4"?>
<?component list="${claimTypesList}" renderer="${claimTypeItemRenderer}" name="selectbox1" macroURI="../macros/findselectbox.zul" id="macro5"?>
<?taglib uri="http://www.zkoss.org/dsp/web/core" prefix="c"?>
<zk xmlns:h="http://www.zkoss.org/2005/zk/native">
	<zscript>
	import com.ndz.controller.*;
	import org.ofbiz.entity.*;
	import org.ofbiz.base.util.*;
	import org.zkoss.zk.ui.event.EventListener;
	Button allocateClaimLimitBtn = arg.get("allocateClaimLimitBtn");
	List claimTypes = null;
	GenericDelegator delegator = com.ndz.zkoss.util.HrmsInfrastructure.getDelegator();//GenericDelegator.getGenericDelegator("default");
	claimTypes = delegator.findByAnd("Enumeration", UtilMisc.toMap(
			"enumTypeId", "CLAIM_TYPE"));
	claimTypes.add(0, null);
	claimTypesArray = claimTypes.toArray(new GenericValue[claimTypes.size()]);
	SimpleListModel claimTypesList = new SimpleListModel(claimTypesArray);
	public class ClaimTypeItemRenderer implements ListitemRenderer {

		public ClaimTypeItemRenderer() {
		}

		public void render(Listitem li, Object data) {
			if (data instanceof GenericValue) {
				GenericValue val = (GenericValue) data;
				li.setLabel(val.getString("description"));
				li.setValue(val.getString("enumId"));
			}
		}
	}
	ListitemRenderer claimTypeItemRenderer = new ClaimTypeItemRenderer();
	SearchController controller = new SearchController();
</zscript>
	<window  id="searchPanel" apply="${controller}" onCreate="activateSearch()">
	<custom-attributes entityName="ClaimLimit" companyWide="true">
		</custom-attributes>
			<div align="center" width="100%" id="div" >
				<div style="margin-right:150px">
					<selectbox values="${claimTypeValues}" fieldLabel="${c:l('Hrms_ClaimType') }" name="claimType" />
				</div>
			</div>
		<separator />
		<box width="100%" height="30px" align="center">
			<hbox>
				<button label="${c:l('HumanResSearch') }" id="searchPerCompany"
					onClick="results.setVisible(true);results.setFocus(true)">
				</button>
				<button label="${c:l('HRMS_ResetButton') }" onClick='Events.postEvent("onClick",allocateClaimLimitBtn,null)' />
			</hbox>
		</box>
		<zscript>
	void activateSearch() {
		Events.postEvent("onClick", searchPerCompany, null);
	}
</zscript>
		<zscript>
		<![CDATA[
	import org.ofbiz.base.util.*;
	class MyRowRenderer implements RowRenderer {

		MyRowRenderer() {
		}

		public void render(Row row, Object data) {
			row.setTooltiptext("DoubleClick To Edit");
			org.ofbiz.entity.GenericValue gv = ((org.ofbiz.entity.GenericValue) data);
			new Label(gv.getString("limitId")).setParent(row);
			org.ofbiz.entity.condition.EntityCondition condition = org.ofbiz.entity.condition.EntityCondition
					.makeCondition("enumId",
							org.ofbiz.entity.condition.EntityOperator.EQUALS,
							gv.getString("claimType"));
			List statusItemList = delegator.findList("Enumeration", condition,
					null, null, null, false);
			GenericValue statusItemGV = (GenericValue) statusItemList.get(0);
			new Label(statusItemGV.getString("description")).setParent(row);

			org.ofbiz.entity.condition.EntityCondition condition1 = org.ofbiz.entity.condition.EntityCondition
					.makeCondition("emplPositionTypeId",
							org.ofbiz.entity.condition.EntityOperator.EQUALS,
							gv.getString("emplPositionTypeId"));
			List employeePositionList = delegator.findList("EmplPositionType",
					condition1, null, null, null, false);
			GenericValue employeePositionGV = UtilValidate.isNotEmpty(employeePositionList) ? (GenericValue) employeePositionList.get(0) : null;
			if(employeePositionGV != null)
				new Label(employeePositionGV.getString("description")).setParent(row);
			else
				new Label("").setParent(row);
			new Label(gv.getString("positionCategory")).setParent(row);
			new Label(gv.getString("employeeType")).setParent(row);
			new Label(gv.getString("amount") + " "+gv.getString("currencyUomId")).setParent(row);
			new Label(gv.getString("hr_comment")).setParent(row);
			//new Label(gv.getString("updatedBy")).setParent(row);
			org.ofbiz.entity.GenericValue personGV = delegator.findByPrimaryKey("Person",UtilMisc.toMap("partyId",gv.getString("updatedBy")));
	        new Label(gv.getString("updatedBy")).setParent(row);
	        new Label(personGV.getString("firstName") + " " + personGV.getString("lastName")).setParent(row);
	        
	         String updatedDate = null;
	         if (gv.getTimestamp("lastUpdatedStamp") != null){
	            java.text.SimpleDateFormat formater = new java.text.SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
				updatedDate =formater.format(gv.getTimestamp("lastUpdatedStamp"));
				new Label(updatedDate.toString()).setParent(row);
				//new Label((gv.getTimestamp("updateDate").getTime()).toString()).setParent(row);
			}else
				new Label("").setParent(row);
				
			Button img = new com.ndz.zkoss.HrmsButton();
			img.setLabel("Delete");
			img.setTooltiptext("Click To Delete");
			img.setParent(row);
			img.setSclass("btnDelete");
			img.addEventListener("onClick", new EventListener() {

				public void onEvent(Event event) throws Exception {
					ConfigureClaimManagementController.deleteClaimLimit(event,
							gv, searchPerCompany);
				}
			});

			row.addEventListener("onDoubleClick",
					new org.zkoss.zk.ui.event.EventListener() {
						public void onEvent(Event event) throws Exception {
							ConfigureClaimManagementController
									.showClaimLimitWindow(event, gv);
						}
					});
		}
	}
	RowRenderer tableRenderer = new MyRowRenderer();
	]]>
</zscript>
		<separator />
		<div id="results" visible="false">
			<h:table width="99%" style="border:0px" cellspacing="0px" cellpadding="0px">
				<h:tr>
					<h:td width="90%">
						<label value="${c:l('HRMS_SEARCHRESULTS') }"></label>
					</h:td>
					<h:td  style="text-align:right">
						<paging id="paging" width="100%" />
					</h:td>
				</h:tr>
			</h:table>
			<grid  id="dataGrid" rowRenderer="${tableRenderer }">
				<columns menupopup="auto">
					<column label="${c:l('Hrms_ClaimLimitId')}" width="90px" />
					<column label="${c:l('Hrms_ClaimType')}" width="100px" />
					<column label="${c:l('Hrms_PositionType') }" width="150px" />
					<column label="${c:l('FormFieldTitle_positionCategories') }" width="110px" />
					<column label="${c:l('HRMS_EMPLOYEE_TYPE') }" width="110px" />
					<column label="${c:l('Hrms_ClaimAmount') }" />
					<column label="${c:l('Hrms_Comment') }" />
					<column label="${c:l('Hrms_UpdatedById') }" />
					<column label="${c:l('Hrms_UpdatedByName') }" />
					<column label="${c:l('Hrms_UpdateDate') }" />
					<column label="${c:l('Hrms_Action') }" width="80px" />
				</columns>
			</grid>
		</div>
	</window>
</zk>