<?component name="findbox1" macroURI="../macros/textfindMacro.zul" id="macro1"?>
<?component name="findbox2" macroURI="../macros/textfindMacro.zul" id="macro2"?>
<zk xmlns:h="http://www.zkoss.org/2005/zk/native">
	<zscript>
	import com.ndz.controller.*;
	Button employeeSettlementBtn = arg.get("employeeSettlementBtn");
	SearchController controller = new SearchController();
	org.ofbiz.entity.GenericValue userLogin = (org.ofbiz.entity.GenericValue) Executions.getCurrent().getDesktop().getSession()
			.getAttribute("userLogin");
	employeeId = userLogin.getString("partyId");
	org.ofbiz.entity.GenericValue employeePosIdGv = org.ofbiz.humanresext.util.HumanResUtil.getEmplPositionForParty(employeeId, delegator);
	String employeePosId = null;
	if (employeePosIdGv != null) {
		employeePosId = employeePosIdGv.getString("emplPositionId");
	}
</zscript>
	<window id="searchPanel" apply="${controller}">
		<custom-attributes entityName="MaxTerminationDetail" companyWide="true"></custom-attributes>
		<textbox visible="false" id="mgrPositionId_searchfld" value="${employeePosId}"></textbox>
		<textbox visible="false" id="statusId_searchfld" value="ET_ADM_APPROVED"></textbox>
		<textbox visible="false" id="statusId_1adminfld" value="ET_ADM_APPROVED"></textbox>
		<hbox>
			<div align="right" width="650px">
				<findbox1 fieldLabel="Resignation Id" name="terminationId" type="text" cols="40" />
			</div>
		</hbox>
		<separator />
		<hbox>
			<div align="right" width="650px">
				<findbox2 fieldLabel="Employee Id" name="partyId" type="text" cols="40" />
			</div>
		</hbox>
		<separator />
		<box width="100%" height="30px" align="center">
			<hbox>
				<button label="${c:l('HumanResSearch') }" mold="os" id="searchPerCompany"
					onClick="results.setVisible(true);results.setFocus(true)">
				</button>
				<button label="${c:l('HRMS_ResetButton') }" onClick='Events.postEvent("onClick",employeeSettlementBtn,null)'  />
			</hbox>
		</box>
		<zscript>
		<![CDATA[
	import org.zkoss.util.resource.Labels;
	import org.ofbiz.base.util.*;
	import org.zkoss.zk.ui.event.EventListener;
	import org.ofbiz.entity.*;
	
	java.text.SimpleDateFormat formater = new java.text.SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
	class MyRowRenderer implements RowRenderer {
	

		MyRowRenderer() {
		}

		public void render(Row row, Object data) {
			org.ofbiz.entity.GenericValue gv = ((org.ofbiz.entity.GenericValue) data);
			
			new Label(gv.getString("terminationId")).setParent(row);
			new Label(gv.getString("partyId")).setParent(row);
			GenericDelegator delegator = com.ndz.zkoss.util.HrmsInfrastructure.getDelegator();//GenericDelegator.getGenericDelegator("default");
			GenericValue personGv = delegator.findByPrimaryKey("Person", UtilMisc.toMap("partyId", gv.getString("partyId")));
			if (personGv != null) {
				String fullName = personGv.getString("firstName") + " " + personGv.getString("lastName");
				new Label(fullName).setParent(row);
			} else {
				new Label("").setParent(row);
			}
			
			
			
			String partyId = org.ofbiz.humanresext.util.HumanResUtil.getPartyIdForPositionId(gv.getString("mgrPositionId"), delegator);
			GenericValue managerGv = delegator.findByPrimaryKey("Person", UtilMisc.toMap("partyId", partyId));
			if (managerGv != null) {
				String managerName = managerGv.getString("firstName") + " " + managerGv.getString("lastName");
				new Label(managerName).setParent(row);
			} else {
				new Label("").setParent(row);
			}
			new Label(gv.getString("reason")).setParent(row);
			java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("dd-MM-yyyy");
			
			new Label(sdf.format(gv.getDate("applicationDate"))).setParent(row);
			new Label(sdf.format(gv.getDate("terminationDate"))).setParent(row);
			GenericValue statusGv = delegator.findByPrimaryKey("StatusItem", UtilMisc.toMap("statusId", gv.getString("statusId")));
			String statusId = statusGv.getString("description");
			new Label(statusId).setParent(row);
			new Label(gv.getString("noticePeriod")).setParent(row);
			new Label(gv.getString("settlementType")).setParent(row);
			if(gv.getDouble("unusedLeaves")!=null){
				Integer unusedLeave = gv.getDouble("unusedLeaves").intValue();
				new Label(unusedLeave.toString()).setParent(row);
			}else{
			new Label(" ").setParent(row);
			}
			if(gv.getDouble("encashLeaves")!=null){
				Integer encashLeave = gv.getDouble("encashLeaves").intValue();
				new Label(encashLeave.toString()).setParent(row);
			}else{
			new Label(" ").setParent(row);
			}
			new Label(gv.getString("managerComment")).setParent(row);
			new Label(gv.getString("adminComment")).setParent(row);
			if(gv.getString("updatedBy") != null){
				org.ofbiz.entity.GenericValue personGV1 = delegator.findByPrimaryKey("Person",UtilMisc.toMap("partyId", gv.getString("updatedBy")));
				new Label(personGV1.getString("firstName") + " " + personGV1.getString("lastName")).setParent(row);
				}else{
					new Label("").setParent(row);
			}
			String lastUpdatedDate = null;
	         if (gv.getTimestamp("lastUpdatedStamp") != null){
				lastUpdatedDate = formater.format(gv.getTimestamp("lastUpdatedStamp"));
				new Label(lastUpdatedDate.toString()).setParent(row);
			}else{
				new Label("").setParent(row);
			}
			Map arg = new HashMap();
			arg.put("gv", gv);
			row.addEventListener("onDoubleClick", new EventListener() {
				public void onEvent(Event event) throws Exception {
					Window win = (Window) Executions.createComponents("/zul/employmentTermination/finalSettlement.zul", null, arg);
					win.doModal();
				}
				
			});
		}
		
	}
	
	RowRenderer tableRenderer = new MyRowRenderer();
	]]>
</zscript>
		<separator />
		<div id="results" visible="true">
			<h:table width="99%" style="border:0px" cellspacing="0px" cellpadding="0px">
				<h:tr>
					<h:td width="90%">
						<label value="${c:l('HRMS_SEARCHRESULTS') }"></label>
					</h:td>
					<h:td width="10%" style="text-align:right">
						<paging id="paging" />
					</h:td>
				</h:tr>
			</h:table>
			<grid width="99%" id="dataGrid" rowRenderer="${tableRenderer}">
				<columns menupopup="auto">
					<column label="Resignation Id" onDrop="move(event.dragged)" draggable="col" droppable="col" sortDirection="ascending" />
					<column label="Employee Id" onDrop="move(event.dragged)" draggable="col" droppable="col" />
					<column label="Employee Name" onDrop="move(event.dragged)" draggable="col" droppable="col" />
					<column label="Manager Name" onDrop="move(event.dragged)" draggable="col" droppable="col" />
					<column label="Termination Reason" onDrop="move(event.dragged)" draggable="col" droppable="col" />
					<column label="Application Date" onDrop="move(event.dragged)" draggable="col" droppable="col" />
					<column label="Exit Date" onDrop="move(event.dragged)" draggable="col" droppable="col" />
					<column label="Application Status" onDrop="move(event.dragged)" draggable="col" droppable="col" />
					<column label="Notice Period" onDrop="move(event.dragged)" draggable="col" droppable="col" visible="false" />
					  <column label="Settlement Type" visible="false" />
					<column label="Remaining Leaves" onDrop="move(event.dragged)" draggable="col" droppable="col" visible="false" />
					<column label="Encash Leaves" onDrop="move(event.dragged)" draggable="col" droppable="col" visible="false" />
					<column label="Manager Comments" onDrop="move(event.dragged)" draggable="col" droppable="col" visible="false" />
					<column label="Admin Comments" onDrop="move(event.dragged)" draggable="col" droppable="col" visible="false" />
					<column label="Updated By" visible="false" />
					<column label="Updated Date" visible="false" />
				</columns>
			</grid>
		</div>
		<zscript><![CDATA[
	void move(Component dragged) {
		if (dragged.getClass().getName().endsWith("Column")) {
			int maxRows = dragged.getGrid().getRows().getChildren().size();
			int i = dragged.getParent().getChildren().indexOf(dragged);
			int j = self.getParent().getChildren().indexOf(self);

			//move celles for each row 
			for (int k = 0; k < maxRows; k++)
				self.getGrid().getCell(k, j).parent.insertBefore(self.getGrid().getCell(k, i), self.getGrid().getCell(k, j));
		}

		self.parent.insertBefore(dragged, self);
	}
	Events.postEvent("onClick", searchPanel.getFellow("searchPerCompany"), null);
]]></zscript>
	</window>
</zk>