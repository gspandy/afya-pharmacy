<?taglib uri="http://www.zkoss.org/dsp/web/core" prefix="c"?>
<zk>

	<zscript><![CDATA[
	import org.ofbiz.base.util.*;
	import org.ofbiz.entity.*;
	import org.ofbiz.entity.condition.EntityExpr;
	import org.ofbiz.entity.condition.EntityOperator;
	import org.ofbiz.entity.condition.EntityCondition;
	import java.util.*;
	import org.zkoss.zul.*;
	GenericDelegator delegator = com.ndz.zkoss.util.HrmsInfrastructure.getDelegator();//GenericDelegator.getGenericDelegator("default");
	EntityCondition countryCondition = EntityCondition.makeCondition("geoTypeId", EntityOperator.EQUALS, "COUNTRY");
	Set fieldToSelect = new HashSet();
fieldToSelect.add("geoName");
fieldToSelect.add("geoId");
	List geos = delegator.findList("Geo", countryCondition, fieldToSelect, null, null, false);
geos.add(0, null);
	GenericValue[] geosArray = (GenericValue[]) geos.toArray(new GenericValue[geos.size()]);
	SimpleListModel geoList = new SimpleListModel(geosArray);
	SimpleListModel selectCountry(Listitem geoItem) {

	List states = delegator.findByAnd("GeoAssocAndGeoTo", UtilMisc.toMap("geoIdFrom", geoItem.getValue()));
	states.add(0, null);
	GenericValue[] statesArray = (GenericValue[]) states.toArray(new GenericValue[states.size()]);
	SimpleListModel stateList = new SimpleListModel(statesArray);

	return stateList;

	}
	class GeoItemRenderer implements ListitemRenderer {

		public GeoItemRenderer() {
		}

		public void render(Listitem li, Object data) {
		if (data instanceof GenericValue) {
			GenericValue val = (GenericValue) data;
			li.setLabel(val.getString("geoName"));
			li.setValue(val.getString("geoId"));
		}
		}
	}
	ListitemRenderer geoItemRenderer = new GeoItemRenderer();
]]></zscript>

	<window id="createNewPostalAddress" width="650px" height="450px" position="center" closable="true" border="normal"
		contentStyle="overflow:auto">
		<caption label="${c:l('HRMS_CREATEPOSTALADDRESS') }" />
		<div align="left">
			<separator />
			<textbox visible="false" id="partyId" value="Company" />
			<separator />
			<hbox>
				<div width="150px" align="right">
					<label value="${c:l('FormFieldTitle_addressType') }:" />
					<label value="*" style="color:red" />
				</div>
				<listbox id="contactMechPurposeTypeId" mold="select"
					onSelect="com.ndz.controller.UpdateEmployeeProfileController
				.addContactMechPurpose(event);Clients.closeErrorBox(self)">
					<listitem value="" />
					<listitem label="${c:l('ListBox_CorrespondenceAddress') }" value="GENERAL_LOCATION" id="GENERAL_LOCATION" />
					<listitem label="${c:l('ListBox_PermanentAddress') }" value="PERMANENT_LOCATION" id="PERMANENT_LOCATION" />
					<listitem label="${c:l('ListBox_PresentAddress') }" value="PRIMARY_LOCATION" id="PRIMARY_LOCATION" />
				</listbox>
				<zscript><![CDATA[
	List partyContactMechPurpose = delegator.findByAnd("PartyContactMechPurpose", UtilMisc.toMap("partyId", "Company"));
for (GenericValue partyContactMechPurposeGV : partyContactMechPurpose) {
	Component comp = contactMechPurposeTypeId.getFellowIfAny(partyContactMechPurposeGV
			.getString("contactMechPurposeTypeId"));
	if (comp != null) {
		Listitem li = (Listitem) (comp);
		li.detach();
	}
}
]]>
			</zscript>
			</hbox>
			<separator />
			<hbox>
				<div width="150px" align="right">
					<label value="${c:l('FormFieldTitle_toName') }:" />
					<label value="*" style="color:red" />
				</div>
				<textbox id="toName" constraint="no empty:To Name Required" maxlength="90" />
			</hbox>
			<separator />
			<hbox>
				<div width="150px" align="right">
					<label value="${c:l('FormFieldTitle_Address1') }:" />
					<label value="*" style="color:red" />
				</div>
				<textbox id="address1" rows="3" cols="66" constraint="no empty:Address 1 Required" maxlength="200" />
			</hbox>
			<separator />
			<hbox>
				<div width="150px" align="right">
					<label value="${c:l('FormFieldTitle_Address2') }:" />
				</div>
				<textbox id="address2" rows="3" cols="66" maxlength="200" />
			</hbox>
			<separator />
			<hbox>
				<div width="150px" align="right">
					<label value="${c:l('FormFieldTitle_Country') }:" />
					<label value="*" style="color:red" />
				</div>
				<listbox id="countryGeoId" mold="select" model="${geoList}" itemRenderer="${geoItemRenderer}"
					onSelect="stateProvinceGeoId.setModel(selectCountry(self.selectedItem));Clients.closeErrorBox(self)">

				</listbox>
			</hbox>
			<separator />
			<hbox>
				<div width="150px" align="right">
					<label value="${c:l('FormFieldTitle_State') }:" />
					<label value="*" style="color:red" />
				</div>
				<listbox id="stateProvinceGeoId" mold="select" itemRenderer="${geoItemRenderer}"
					onSelect="Clients.closeErrorBox(self)">
				</listbox>
			</hbox>
			<separator />
			<hbox>
				<div width="150px" align="right">
					<label value="${c:l('FormFieldTitle_City') }:" />
					<label value="*" style="color:red" />
				</div>
				<textbox id="city" maxlength="90"></textbox>
				<zscript>		
						
	<![CDATA[
	import org.zkoss.util.resource.Labels;
	import org.zkoss.util.resource.Labels;
	import com.ndz.zkoss.HrmsUtil;
	public void nameValidation(Textbox comp) throws WrongValueException {
	String value = comp.getValue();
	if (value == "") {
		throw new WrongValueException(comp, "City Name  Required");
	}
	//boolean isNotString = true;
	//isNotString = UtilValidate.isAlphabetic(value);
	//if(!isNotString) {
	//	throw new WrongValueException(comp, " Name should be only Characters");
	//}

	boolean isNotString1 = true;
	isNotString1 = HrmsUtil.checkSpaceValidation(value);
	if (isNotString1) {
		throw new WrongValueException(comp, " Name should be only Characters");
	}
	}
]]>
</zscript>
			</hbox>
			<separator />
			<hbox>
				<div width="150px" align="right">
					<label value="${c:l('FormFieldTitle_PostalCode') }:" />
					<label value="*" style="color:red" />
				</div>
				<textbox id="postalCode" constraint="no empty:Postal Code Required" maxlength="50"></textbox>
			</hbox>
			<separator height="10px" />
			<div align="right" width="275px">
				<hbox>
					<zscript>
	void validate() {
	if (com.ndz.zkoss.HrmsUtil.listboxValidation(contactMechPurposeTypeId)) {
		throw new WrongValueException(contactMechPurposeTypeId, "Address Type Required");
	}

	nameValidation(toName);
	address1.getValue();
	if (com.ndz.zkoss.HrmsUtil.listboxValidation(countryGeoId)) {
		throw new WrongValueException(countryGeoId, "Country Required");
	}

	if (com.ndz.zkoss.HrmsUtil.listboxValidation(stateProvinceGeoId)) {
		throw new WrongValueException(stateProvinceGeoId, "State Required");
	}
	nameValidation(city);

	String poCode = postalCode.getValue();
	if (!(UtilValidate.isInteger(poCode))) {
		throw new WrongValueException(postalCode, "Postal Code Must Be Numeric");
	}
	}
</zscript>
					<button label="${c:l('btnSave') }">
						<attribute name="onClick">
validate();
com.ndz.controller.CompanyInformation.createNewPostalAddress(event);
Events.postEvent("onClick", createNewPostalAddress.getPage().getFellow("companyWindow").getFellow("appendGroupbox")
		.getFellow("personPostalAddressWindow").getFellow("postalAddressTab"), null);
createNewPostalAddress.detach();
</attribute>
					</button>
					<button label="${c:l('ButtonCancel') }" onClick="createNewPostalAddress.detach();"></button>
				</hbox>
			</div>
		</div>
	</window>
</zk>