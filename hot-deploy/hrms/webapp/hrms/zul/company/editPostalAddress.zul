<?taglib uri="http://www.zkoss.org/dsp/web/core" prefix="c"?>
<zk>
	<window id="editPostalAddressWindow" title="${c:l('HRMS_EDITPOSTALADDRESS') }" 
		border="normal" width="650px" height="450px" closable="true" maximizable="true" position="center" contentStyle="overflow:auto">

		<separator height="15px" />
		<hbox>
			<div align="right" width="150px">
				<label value="${c:l('FormFieldTitle_addressType') }:" />
			</div>
			<div align="left" width="150px" style="margin-right:5px">
			<label id="lblContactMechPurposeType"></label>
				<listbox id="contactMechPurposeTypeId" mold="select"
					onSelect="com.ndz.controller.UpdateEmployeeProfileController
				.addContactMechPurpose(event);Clients.closeErrorBox(self)" visible="false">
					<listitem value="" />
					<listitem label="${c:l('ListBox_CorrespondenceAddress') }"
						value="GENERAL_LOCATION" id="generalLocationListtem"/>
					<listitem label="${c:l('ListBox_PermanentAddress') }"
						value="PERMANENT_LOCATION" id="permanentLocationListitem"/>
					<listitem label="${c:l('ListBox_PresentAddress') }"
						value="PRIMARY_LOCATION" id="primaryLocationListitem"/>
				</listbox>
			</div>
		</hbox>
		<separator />
		<textbox id="contactMechId" visible="false" />
		<textbox id="partyId" visible="false" value="Company" />
		<hbox>
			<div width="150px" align="right">
				<label value="${c:l('FormFieldTitle_toName') }:" />
				<label value="*" style="color:red" />
			</div>
			<textbox id="toName" constraint="no empty:To Name Required"
				maxlength="90" />
					
					<zscript>		
						
	<![CDATA[
	import org.zkoss.util.resource.Labels;
	import org.zkoss.util.resource.Labels;
	import com.ndz.zkoss.HrmsUtil;
	public void nameValidation(Textbox comp) throws WrongValueException {
		String value = comp.getValue();
		if (value == "") {
			throw new WrongValueException(comp, "To Name Required");
		}
		//boolean isNotString = true;
		//isNotString = UtilValidate.isAlphabetic(value);
		//if (!isNotString) {
		//	throw new WrongValueException(comp, "Name should be only Characters");
		//}
		boolean isNotString1 = true;
		 isNotString1 =HrmsUtil.checkSpaceValidation(value);
		if(isNotString1) {
			throw new WrongValueException(comp, " Name should be only Characters");
		}
	}
]]>
</zscript>
				
		</hbox>
		<separator />
		<hbox visible="false">
			<div align="right" width="130px" style="margin-right:5px">
				<label value="${c:l('FormFieldTitle_attentionName') }:" style="font-weight:bold" />
			</div>
			<div align="left" width="150px" style="margin-right:5px">
				<textbox id="attnName" width="250px" />
			</div>
		</hbox>
		<separator />
		<hbox>
			<div width="150px" align="right">
				<label value="${c:l('FormFieldTitle_Address1') }:" />
				<label value="*" style="color:red" />
			</div>
			<textbox id="address1" rows="3" cols="66"
				constraint="no empty:Address 1 Required" maxlength="200" />
		</hbox>
		<separator />
		<hbox>
			<div width="150px" align="right">
				<label value="${c:l('FormFieldTitle_Address2') }:" />
			</div>
			<textbox id="address2" rows="3" cols="66" maxlength="200" />
		</hbox>
		<separator />
		<hbox>
			<div width="150px" align="right">
				<label value="${c:l('FormFieldTitle_City') }:" />
				<label value="*" style="color:red" />
			</div>
			<textbox id="city" constraint="no empty:City Required"
				maxlength="90">
			</textbox>
		</hbox>
		<separator />
		<zscript><![CDATA[
	import org.ofbiz.base.util.*;
	import org.ofbiz.entity.*;
	import org.ofbiz.entity.condition.EntityExpr;
	import org.ofbiz.entity.condition.EntityOperator;
	import org.ofbiz.entity.condition.EntityCondition;
	import java.util.*;
	import org.zkoss.zul.*;
	GenericDelegator delegator = com.ndz.zkoss.util.HrmsInfrastructure.getDelegator();//GenericDelegator.getGenericDelegator("default");
	String selectStateProvinceGeoId = (String) Executions.getCurrent().getArg().get("stateProvinceGeoId");
	String selectedCountryGeoId = (String) Executions.getCurrent().getArg().get("countryGeoId");
	EntityCondition countryCondition = EntityCondition.makeCondition("geoTypeId",EntityOperator.EQUALS, "COUNTRY");
	Set fieldToSelect = new HashSet();
	fieldToSelect.add("geoName");
	fieldToSelect.add("geoId");
	List geos = delegator.findList("Geo", countryCondition, fieldToSelect,null, null, false);
	geos.add(0, null);
	GenericValue[] geosArray = (GenericValue[]) geos.toArray(new GenericValue[geos.size()]);
	SimpleListModel geoList = new SimpleListModel(geosArray);

	SimpleListModel selectCountry(Listitem geoItem) {
		List states = delegator.findByAnd("GeoAssocAndGeoTo",UtilMisc.toMap("geoIdFrom", geoItem.getValue()));
		states.add(0, null);
		GenericValue[] statesArray = (GenericValue[]) states.toArray(new GenericValue[states.size()]);
		SimpleListModel stateList = new SimpleListModel(statesArray);
		return stateList;
	}
	
	class GeoItemRenderer implements ListitemRenderer {

		public GeoItemRenderer() {
		}

		public void render(Listitem li, Object data) {
			if (data instanceof GenericValue) {
				GenericValue val = (GenericValue) data;
				li.setLabel(val.getString("geoName"));
				li.setValue(val.getString("geoId"));
				if(val.getString("geoId").equals(selectedCountryGeoId)){
					countryGeoId.setSelectedItem(li);
					}
				if(val.getString("geoId").equals(selectStateProvinceGeoId)){
					stateProvinceGeoId.setSelectedItem(li);
					}
			}
		}
	}
	ListitemRenderer geoItemRenderer = new GeoItemRenderer();
	
	String partyContactMechId = (String) Executions.getCurrent().getArg().get("contactMechId");
	List partyContactMechPurposeList = delegator.findByAnd("PartyContactMechPurpose", UtilMisc.toMap("contactMechId", partyContactMechId));
	GenericValue partyContactMechGv = org.ofbiz.entity.util.EntityUtil.getFirst(partyContactMechPurposeList);
	String contactMechPurposeId = null;
	if (partyContactMechGv != null) {
		contactMechPurposeId = (String) partyContactMechGv.getString("contactMechPurposeTypeId");
	}
	if (contactMechPurposeId != null) {
		if (contactMechPurposeId.equals("GENERAL_LOCATION")||contactMechPurposeId.equals("BILLING_LOCATION"))
			generalLocationListtem.setSelected(true);
		if (contactMechPurposeId.equals("PRIMARY_LOCATION"))
			primaryLocationListitem.setSelected(true);
		if (contactMechPurposeId.equals("PERMANENT_LOCATION"))
			permanentLocationListitem.setSelected(true);
	}
	if (contactMechPurposeId != null) {
		if (contactMechPurposeId.equals("GENERAL_LOCATION")||contactMechPurposeId.equals("BILLING_LOCATION")){
			generalLocationListtem.setSelected(true);
			lblContactMechPurposeType.setValue("Correspondence Address");
		}
		if (contactMechPurposeId.equals("PRIMARY_LOCATION")){
			primaryLocationListitem.setSelected(true);
			lblContactMechPurposeType.setValue("Permanent Address");
		}
		if (contactMechPurposeId.equals("PERMANENT_LOCATION")){
			permanentLocationListitem.setSelected(true);
			lblContactMechPurposeType.setValue("Primary Address");
		}
	}
]]></zscript>
		<hbox>
			<div width="150px" align="right">
				<label value="${c:l('FormFieldTitle_Country') }:" />
				<label value="*" style="color:red" />
			</div>
			<listbox id="countryGeoId" mold="select" model="${geoList}"
				itemRenderer="${geoItemRenderer}"
				onSelect="stateProvinceGeoId.setModel(selectCountry(self.selectedItem));Clients.closeErrorBox(self)">

			</listbox>
		</hbox>
		<separator />
		<hbox>
			<div width="150px" align="right">
				<label value="${c:l('FormFieldTitle_State') }:" />
				<label value="*" style="color:red" />
			</div>
			<listbox id="stateProvinceGeoId" mold="select"
				itemRenderer="${geoItemRenderer}" onCreate="self.setModel(selectCountry(countryGeoId.selectedItem));Clients.closeErrorBox(self)">
			</listbox>
		</hbox>
		<separator />
		<hbox>
			<div width="150px" align="right">
				<label value="${c:l('FormFieldTitle_PostalCode') }:" />
				<label value="*" style="color:red" />
			</div>
			<textbox id="postalCode"
				constraint="no empty:Postal Code Required" maxlength="50">
			</textbox>
		</hbox>
		<separator />
		<hbox visible="false">
			<div align="right" width="130px" style="margin-right:5px">
				<label value="${c:l('FormFieldTitle_allowSolicitation') }:" />
			</div>
			<div align="left" width="150px" style="margin-right:5px">
				<listbox id="allowSolicitation" mold="select">
					<listitem label="${c:l('ListBox_Yes') }" value="Y" />
				</listbox>
			</div>
		</hbox>
		<separator />
		<zscript>
		
		
			void validate(){
			if(com.ndz.zkoss.HrmsUtil.listboxValidation(contactMechPurposeTypeId)){
			   throw new WrongValueException(contactMechPurposeTypeId,"Address Type Required");
			}
			  nameValidation(toName);
			 address1.getValue();
			 if(com.ndz.zkoss.HrmsUtil.listboxValidation(countryGeoId)){
			 	throw new WrongValueException(countryGeoId,"Country Required");
			 }
			 if(com.ndz.zkoss.HrmsUtil.listboxValidation(stateProvinceGeoId)){
			 	throw new WrongValueException(stateProvinceGeoId,"State Required");
			 }
			 nameValidation(city);
			 
			 String poCode = postalCode.getValue();
			 if(!(UtilValidate.isInteger(poCode))){
			 	throw new WrongValueException(postalCode,"Postal Code Must Be Numeric");
			 }
			}
			</zscript>
		<hbox>
			<div align="right" width="268px">
				<button label="${c:l('HRMS_UPDATE') }" id="updatePostalAddress"
					onClick='validate();com.ndz.controller.UpdateEmployeeProfileController.updatePostalAddress(event);
				Events.postEvent("onClick",editPostalAddressWindow.getPage().getFellow("companyWindow").getFellow("appendGroupbox").getFellow("personPostalAddressWindow").getFellow("postalAddressTab"),null);
				editPostalAddressWindow.detach()'>
				</button>
				<button label="${c:l('ButtonCancel') }"
					onClick="editPostalAddressWindow.detach()" />
			</div>
		</hbox>
	</window>
</zk>