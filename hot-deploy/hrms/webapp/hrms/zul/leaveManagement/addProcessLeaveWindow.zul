<zk xmlns:h="http://www.zkoss.org/2005/zk/native">
	<?component name="findbox" macroURI="../macros/findbox.zul" id="macro1"?>
	<?component name="fromDatebox" macroURI="../macros/fromDateMacro.zul" id="macro2"?>
	<?component name="thruDatebox" macroURI="../macros/thruDateMacro.zul" id="macro3"?>
	<?component list="${leaveTypesList}" renderer="${leaveTypeItemRenderer}" name="selectbox" macroURI="../macros/findselectbox.zul" id="macro4" ?>
	<zscript>
	<![CDATA[
	import com.ndz.controller.*;
	import com.ndz.controller.*;
	import org.ofbiz.entity.*;
	import org.ofbiz.base.util.*;
	List leaveTypes = null;
	Button processLeaveBtn = arg.get("processLeaveBtn");
	GenericDelegator delegator = com.ndz.zkoss.util.HrmsInfrastructure.getDelegator();//GenericDelegator.getGenericDelegator("default");
	leaveTypes = delegator.findByAnd("Enumeration", UtilMisc.toMap("enumTypeId", "LEAVE_TYPE"));
	leaveTypes.add(0, null);
	Object[] leaveTypesArray = leaveTypes.toArray(new GenericValue[leaveTypes.size()]);
	SimpleListModel leaveTypesList = new SimpleListModel(leaveTypesArray);
	public class LeaveTypeItemRenderer implements ListitemRenderer {

		public LeaveTypeItemRenderer() {
		}

		public void render(Listitem li, Object data) {
			if (data instanceof GenericValue) {
				GenericValue val = (GenericValue) data;
				li.setLabel(val.getString("description"));
				li.setValue(val.getString("enumId"));
			}
		}
	}
	ListitemRenderer leaveTypeItemRenderer = new LeaveTypeItemRenderer();
	SearchController controller = new SearchController();
	org.ofbiz.entity.GenericValue userLogin = (org.ofbiz.entity.GenericValue) Executions.getCurrent().getDesktop().getSession()
			.getAttribute("userLogin");
	String employeeId = userLogin.getString("partyId");
	org.ofbiz.entity.GenericValue employeePosIdGv = null;
	employeePosIdGv = org.ofbiz.humanresext.util.HumanResUtil.getEmplPositionForParty(employeeId, delegator);
	String employeePosId = null;
	if (employeePosIdGv != null) {
		employeePosId = employeePosIdGv.getString("emplPositionId");
	}
	org.ofbiz.security.Security security = requestScope.get("security");
	boolean isAdmin = security.hasPermission("HUMANRES_ADMIN", userLogin);
	String appliedemployeeId = (String)Executions.getCurrent().getArg().get("employeeId");
	
	boolean isManager = security.hasPermission("HUMANRES_MGR", userLogin);
	boolean both = false;
	if (isAdmin && isManager)
		both = true;
	]]>
</zscript>
	<window id="searchPanel" apply="${controller}" onCreate="activateSearch()">
		<custom-attributes entityName="EmplLeave" companyWide="true"></custom-attributes>
		<separator height="10px"></separator>
		<textbox visible="false" id="mgrPositionId_searchfld" value="${employeePosId}"></textbox>
		
		<textbox visible="false" id="statusType_searchfld">
		<attribute name = "onCreate">
			if(!both)	self.setValue("1");
		</attribute>
		</textbox>
		
		<textbox visible="false" id="adminStatusType_1adminfld">
		<attribute name = "onCreate">
		if(!both)	self.setValue("2");
		</attribute>
		</textbox>
		
		<textbox visible="false" id="partyId" value="${employeeId}" if="${isAdmin || isManager}"/>
		<separator />
		<h:table>
			<h:tr>
				<h:td>
				<div align="right">
					<hbox>
						<div width="150px" align="right">
							<label value="Employee Id" visible="true" if="${isAdmin || isManager}"/>
						</div>
						<div align="left" style="margin-left:8px">
						<employeebox id="partyId_searchfld" visible="true" if="${isAdmin || isManager}">
						<attribute name="onChange"><![CDATA[
							if(searchPanel.getFellowIfAny("partyId") != null)
								searchPanel.getFellow("partyId").detach();
							Textbox txt = new Textbox();
							txt.setVisible(false);
							txt.setId("partyId");
							txt.setParent(searchPanel);
							if(isAdmin)
								partyId.setValue(self.getValue());
							if(isManager)
								partyId.setValue(self.getValue());
						]]></attribute>
						</employeebox>
						</div>
					</hbox>
					</div>
				</h:td>
				<h:td>
					<selectbox value="${values}" fieldLabel="${c:l('HumanResLeaveSummaryType') }" name="leaveTypeId" />
				</h:td>
				<h:td>
					<hbox>
							<div width="150px" align="right">
								<label value="Status Type"/>
							</div>	
							<div style="margin-left:6px;">
								<listbox mold="select">
								<attribute name="onSelect">
								if(UtilValidate.isNotEmpty(self.getSelectedItem()))
									leaveStatusId.setValue(self.getSelectedItem().getValue().toString());
								</attribute>
									<listitem label="" value=""></listitem>
									<listitem label="Admin Approved" value="LT_ADM_APPROVED"></listitem>
									<listitem label="Admin Rejected" value="LT_ADM_REJECTED"></listitem>
									<listitem label="Manager Approved" value="LT_MGR_APPROVED"></listitem>
									<listitem label="Manager Rejected" value="LT_MGR_REJECTED" if="${isManager}"></listitem>
									<listitem label="Submitted" value="LT_SUBMITTED" if="${isManager}"></listitem>
								</listbox>
								<textbox visible="false" id="leaveStatusId" value=""/>
							</div>					
						</hbox>				
				</h:td>
			</h:tr>
			<h:tr>
				<h:td>
					<fromDatebox fieldLabel="${c:l('HumanResLeaveSummaryFromDate') }" name="fromDate" type="date" />
				</h:td>
				<h:td style="text-align:left">
					<thruDatebox fieldLabel="${c:l('HumanResLeaveSummaryThruDate') }" name="thruDate" type="date" />
				</h:td>
			</h:tr>
		</h:table>
		<box width="100%" height="30px" align="center">
			<hbox>
				<button label="${c:l('HumanResSearch') }" mold="os" id="searchPerCompany">
					<attribute name="onClick"><![CDATA[
					 if(UtilValidate.isEmpty(partyId_searchfld.getValue()) && searchPanel.getFellowIfAny("partyId") != null)
								partyId.detach();
					 results.setVisible(true);results.setFocus(true);
					 ]]></attribute>
				</button>
				<button label="${c:l('HRMS_ResetButton') }" onClick='Events.postEvent("onClick",processLeaveBtn,null);' />
			</hbox>
		</box>
		<zscript>
	void activateSearch() {
		Events.postEvent("onClick", searchPerCompany, null);
	}
</zscript>
		<zscript>
		<![CDATA[
	import org.ofbiz.base.util.*;
	import org.zkoss.zk.ui.event.EventListener;
	import java.util.Date;
	LeaveManagementController leaveManagementController = new LeaveManagementController();
	class MyRowRenderer implements RowRenderer {

		MyRowRenderer() {
		}

		public void render(Row row, Object data) {
			org.ofbiz.entity.GenericValue gv = ((org.ofbiz.entity.GenericValue) data);
			row.setTooltiptext("DoubleClick To Approve/Reject");
			new Label(gv.getString("leaveId")).setParent(row);
			org.ofbiz.entity.GenericValue personGV = delegator.findByPrimaryKey("Person",UtilMisc.toMap("partyId", gv.getString("partyId")));
			new Label(gv.getString("partyId") + " " + "-" + " " + personGV.getString("firstName") + " " + personGV.getString("lastName")).setParent(row);
			//new Label(gv.getString("leaveTypeId")).setParent(row);
			org.ofbiz.entity.condition.EntityCondition condition = org.ofbiz.entity.condition.EntityCondition.makeCondition("enumId",
					org.ofbiz.entity.condition.EntityOperator.EQUALS, gv.getString("leaveTypeId"));
			List statusItemList = delegator.findList("Enumeration", condition, null, null, null, false);
			GenericValue statusItemGV = (GenericValue) statusItemList.get(0);
			new Label(statusItemGV.getString("description")).setParent(row);

			//new Label(gv.getString("leaveStatusId")).setParent(row);
			List statusIdList = delegator.findByAnd("StatusItem", UtilMisc.toMap("statusId", gv.getString("leaveStatusId")));
			GenericValue statusIdGV = (GenericValue) statusIdList.get(0);
			new Label(statusIdGV.getString("description")).setParent(row);

			List employeeLeaveInfoList = delegator.findByAnd("EmployeeLeaveInfo", UtilMisc.toMap("partyId", gv.getString("partyId"),
					"leaveType", gv.getString("leaveTypeId")));
			GenericValue employeeLeaveInfoGv = org.ofbiz.entity.util.EntityUtil.getFirst(employeeLeaveInfoList);
			String availedLeaveType = "";
			if (employeeLeaveInfoGv != null) {
				availedLeaveType = (String) employeeLeaveInfoGv.getString("availedLeave");
				if (availedLeaveType != null)
					availedLeaveType = availedLeaveType.substring(0, 1);
			}
			 java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("dd-MM-yyyy");
				new Label(sdf.format((gv.getTimestamp("fromDate")).getTime()).toString()).setParent(row);
				new Label(sdf.format((gv.getTimestamp("thruDate")).getTime()).toString()).setParent(row);
			
			Double paidDaysDouble = gv.getDouble("paidDays");
			Double unpaidDaysDouble1 =0.0;
			if(gv.getDouble("unpaidDays")!=null){
			unpaidDaysDouble1= gv.getDouble("unpaidDays");
			}
			Double daysOnLeave = paidDaysDouble + unpaidDaysDouble1;
			Integer daysOnLeaveInt =0;
			daysOnLeaveInt= daysOnLeave.intValue();
			if (paidDaysDouble != null) {
				new Label((daysOnLeave.toString())).setParent(row);
			} else {
				new Label("").setParent(row);
			}
			
			if (paidDaysDouble != null){
				if(!(gv.getString("leaveStatusId").equals("LT_MGR_REJECTED")) && !(gv.getString("leaveStatusId").equals("LT_ADM_REJECTED")) && !(gv.getString("leaveStatusId").equals("LT_SUBMITTED"))){
				// Integer	paidDaysInt = paidDaysDouble.intValue();
			new Label(paidDaysDouble.toString()).setParent(row);
				}else{
					new Label("").setParent(row);
				}
			}else{
				new Label("").setParent(row);
			}
			
			Double unpaidDaysDouble = gv.getDouble("unpaidDays");
			if (unpaidDaysDouble != null) {
				if(!(gv.getString("leaveStatusId").equals("LT_MGR_REJECTED")) && !(gv.getString("leaveStatusId").equals("LT_ADM_REJECTED"))){
				//Integer unpaidDaysInt = unpaidDaysDouble.intValue();
				new Label((unpaidDaysDouble.toString())).setParent(row);
				} else {
					new Label("").setParent(row);
				}
			} else {
				new Label("").setParent(row);
			}
			if (gv.getString("description") != null) {
				new Label(gv.getString("description")).setParent(row);
			} else {
				new Label("").setParent(row);
			}
			if (gv.getString("contactAddress") != null) {
				new Label(gv.getString("contactAddress")).setParent(row);
			} else {
				new Label("").setParent(row);
			}
			if (gv.getString("contactNumber") != null) {
				new Label(gv.getString("contactNumber")).setParent(row);
			} else {
				new Label("").setParent(row);
			}
			if (gv.getString("mgrComment") != null) {
				new Label(gv.getString("mgrComment")).setParent(row);
			} else {
				new Label("").setParent(row);
			}
			if (gv.getString("adminComment") != null) {
				new Label(gv.getString("adminComment")).setParent(row);
			} else {
				new Label("").setParent(row);
			}
			
			if(gv.getString("updatedBy") != null){
				org.ofbiz.entity.GenericValue personGV1 = delegator.findByPrimaryKey("Person",UtilMisc.toMap("partyId", gv.getString("updatedBy")));
				new Label(personGV1.getString("firstName") + " " + personGV1.getString("lastName")).setParent(row);
				}else{
					new Label("").setParent(row);
				}
			
			 String updatedDate = null;
	         if (gv.getTimestamp("lastUpdatedStamp") != null){
	            java.text.SimpleDateFormat formater = new java.text.SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
				updatedDate =formater.format(gv.getTimestamp("lastUpdatedStamp"));
				new Label(updatedDate.toString()).setParent(row);
				//new Label((gv.getTimestamp("updateDate").getTime()).toString()).setParent(row);
			}else{
				new Label("").setParent(row);
			}
	         
			row.addEventListener("onDoubleClick", new EventListener() {
				public void onEvent(Event event) throws Exception {

				/*	if (((!isAdmin || both) && ((gv.getString("leaveStatusId").equals("LT_SUBMITTED"))))) {
						leaveManagementController.processLeave(event, gv);
					} else if (((!isAdmin || both) && ((gv.getString("leaveStatusId").equals("LT_MGR_APPROVED"))))
							|| ((!isAdmin || both) && ((gv.getString("leaveStatusId").equals("LT_MGR_REJECTED"))))) {
						Messagebox.show("Leave is Already Approved/Rejected","Warning", 1, null);
					}
					if (((isAdmin || both )&& ((gv.getString("leaveStatusId").equals("LT_MGR_APPROVED"))))) {
						leaveManagementController.processLeave(event, gv);
					} else if (((isAdmin || both) && ((gv.getString("leaveStatusId").equals("LT_ADM_APPROVED"))))
							|| ((isAdmin || both)&& ((gv.getString("leaveStatusId").equals("LT_ADM_REJECTED"))))) {
						Messagebox.show("Leave is Already Approved/Rejected", "Warning", 1, null);
					}*/
					
					if((isManager || both) && gv.getString("leaveStatusId").equals("LT_SUBMITTED")){
						leaveManagementController.processLeave(event, gv);
					}
					else if ((isAdmin || both) && gv.getString("leaveStatusId").equals("LT_MGR_APPROVED")){
						leaveManagementController.processLeave(event, gv);
					}
					else if ((isManager || both) && (gv.getString("leaveStatusId").equals("LT_MGR_APPROVED")||
							gv.getString("leaveStatusId").equals("LT_MGR_REJECTED"))){
						Messagebox.show("Leave is Already Approved/Rejected","Warning", 1, null);
					}
					else if(isAdmin && (gv.getString("leaveStatusId").equals("LT_ADM_APPROVED")||
							gv.getString("leaveStatusId").equals("LT_ADM_REJECTED"))){
						Messagebox.show("Leave is Already Approved/Rejected","Warning", 1, null);
					}
				}

			});

		}
	}
	RowRenderer tableRenderer = new MyRowRenderer();
]]>
</zscript>
		<separator />
		<div id="results" visible="false">
			<h:table style="border:0px" cellspacing="0px" cellpadding="0px">
				<h:tr>
					<h:td width="90%">
						<label value="${c:l('HRMS_SEARCHRESULTS') }"></label>
					</h:td>
					<h:td width="20%" style="text-align:right">
						<paging id="paging" />
					</h:td>
				</h:tr>
			</h:table>
			<grid id="dataGrid" rowRenderer="${tableRenderer}">

				<columns menupopup="auto">
					<column label="${c:l('HumanResLeaveSummaryId')}" width="100px" />
					<column label="Employee Id - Name" width="100px" />
					<column label="${c:l('HumanResLeaveSummaryType')}" width="100px" />
					<column label="${c:l('HumanResLeaveSummaryStatus')}" width="100px" />
					<column label="${c:l('HumanResLeaveSummaryFromDate')}" width="100px" />
					<column label="${c:l('HumanResLeaveSummaryThruDate')}" width="100px" />
					<column label="Days On Leave" width="110px" />
					<column label="${c:l('Hrms_PaidDays')}" width="100px" />
					<column label="Unpaid Days"	visible="false" />
					<column label="Reason For Leave" visible="false" />
					<column label="Contact Address" visible="false" />
					<column label="Contact Number" visible="false" />
					<column label="Manager Comments" visible="false" />
					<column label="Admin Comments" visible="false" />
					<column label="Updated By" visible="false" />
					<column label="Updated Date" visible="false" />
				</columns>
			</grid>
		</div>
	</window>
</zk>