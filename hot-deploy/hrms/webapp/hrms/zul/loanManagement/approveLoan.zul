<?component name="findbox" macroURI="../macros/textFindIgnoreCase.zul" id="macro1"?>
<?component name="fromDatebox" macroURI="../macros/fromDateMacro.zul" id="macro2"?>
<?component name="thruDatebox" macroURI="../macros/thruDateMacro.zul" id="macro3"?>
<?component list="${loanTypesList}" renderer="${loanTypeItemRenderer}" name="selectbox" macroURI="../macros/findselectbox.zul" id="macro4" ?>
<?taglib uri="http://www.zkoss.org/dsp/web/core" prefix="c"?>
<zk xmlns:h="http://www.zkoss.org/2005/zk/native">
	<zscript>
	<![CDATA[
    
	import com.ndz.controller.*;
	import org.ofbiz.entity.*;
	import org.ofbiz.base.util.*;
	Toolbarbutton processLoanBtn = arg.get("processLoanBtn");
	List loanTypes = null;
	GenericDelegator delegator = com.ndz.zkoss.util.HrmsInfrastructure.getDelegator();//GenericDelegator.getGenericDelegator("default");
	employeeId = userLogin.getString("partyId");
	GenericValue employeePosIdGv = org.ofbiz.humanresext.util.HumanResUtil
			.getEmplPositionForParty(employeeId, delegator);
	String employeePosId = null;
	if (employeePosIdGv != null) {
		employeePosId = employeePosIdGv.getString("emplPositionId");
	}
	loanTypes = delegator.findByAnd("Enumeration", UtilMisc.toMap("enumTypeId",
			"ELOAN_TYPE"));
	loanTypes.add(0, null);
	loanTypesArray = loanTypes.toArray(new GenericValue[loanTypes.size()]);
	SimpleListModel loanTypesList = new SimpleListModel(loanTypesArray);
	public class LoanTypeItemRenderer implements ListitemRenderer {

		public LoanTypeItemRenderer() {
		}

		public void render(Listitem li, Object data) {
			if (data instanceof GenericValue) {
				GenericValue val = (GenericValue) data;
				li.setLabel(val.getString("description"));
				li.setValue(val.getString("enumId"));
			}
		}
	}
	ListitemRenderer loanTypeItemRenderer = new LoanTypeItemRenderer();
	SearchController controller = new SearchController();
	org.ofbiz.security.Security security = requestScope.get("security");
	boolean isAdmin = security.hasPermission("HUMANRES_ADMIN", userLogin);
	boolean isManager = security.hasPermission("HUMANRES_MGR", userLogin);
	boolean both = false;
	if (isAdmin && isManager)
		both = true;
]]>
</zscript>
	<window id="searchPanel" apply="${controller}"
		onOK="activateSearch()">
		<custom-attributes entityName="MaxELoanDetail"
			companyWide="true">
		</custom-attributes>
		<textbox visible="false" id="mgrPositionId_searchfld"
			value="${employeePosId}">
		</textbox>
		<textbox visible="false" id="statusType_searchfld" value="1" unless="${both}">
		</textbox>
		<textbox visible="false" id="adminStatusType_1adminfld" value="2" unless="${both}">
		</textbox>
		<separator />
		<h:table>
			<h:tr>
				<h:td style="text-align:left">
					<findbox fieldLabel="${c:l('Hrms_LoanId') }"
						name="loanId" type="text" cols="20" />
				</h:td>
				<h:td>
					<selectbox value="${values}"
						fieldLabel="${c:l('Hrms_LoanType') }" name="loanType" />
				</h:td>
			</h:tr>
			<h:tr>
				<h:td>
					<div align="left">
						<fromDatebox
							fieldLabel="${c:l('HumanResLeaveSummaryFromDate') }"
							name="fromDate" type="date" />
					</div>
				</h:td>
				<h:td style="text-align:left">
					<thruDatebox
						fieldLabel="${c:l('HumanResLeaveSummaryThruDate') }"
						name="thruDate" type="date" />
				</h:td>
			</h:tr>
		</h:table>
		<box width="100%" height="30px" align="center">
			<hbox>
				<button label="${c:l('HumanResSearch') }" mold="os"
					id="searchPerCompany"
					onClick="results.setVisible(true);results.setFocus(true)">
				</button>
				<button label="${c:l('HRMS_ResetButton') }"
				onClick='Events.postEvent("onClick",processLoanBtn,null)' />
			</hbox>
		</box>
		<zscript>
	void activateSearch() {
		Events.postEvent("onClick", searchPerCompany, null);
	}
</zscript>
		<zscript>
		<![CDATA[
	import org.ofbiz.base.util.*;
	import org.zkoss.zk.ui.event.EventListener;
	ApplyLoanManagementController loanManagementController = new ApplyLoanManagementController();
	class MyRowRenderer implements RowRenderer {

		MyRowRenderer() {
		}

		public void render(Row row, Object data) {
			org.ofbiz.entity.GenericValue gv = ((org.ofbiz.entity.GenericValue) data);
			row.setTooltiptext("DoubleClick To Approve/Reject");
			new Label(gv.getString("loanId")).setParent(row);
			org.ofbiz.entity.GenericValue personGV = delegator
					.findByPrimaryKey("Person", UtilMisc.toMap("partyId", gv
							.getString("partyId")));
			new Label(gv.getString("partyId") + " " + "-" + " "
					+ personGV.getString("firstName") + " "
					+ personGV.getString("lastName")).setParent(row);
			GenericValue loanTypeGV = delegator.findByPrimaryKey("Enumeration",
					UtilMisc.toMap("enumId", gv.getString("loanType")));
			new Label(loanTypeGV.getString("description")).setParent(row);
			java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("dd-MM-yyyy");
			
			if (gv.getDate("fromDate") != null) {
				new Label(sdf.format(gv.getDate("fromDate"))).setParent(row);
			} else {
				new Label("").setParent(row);
			}
			if (gv.getDate("thruDate") != null) {
				new Label(sdf.format(gv.getDate("thruDate"))).setParent(row);
			} else {
				new Label("").setParent(row);
			}
			new Label(com.ndz.zkoss.util.CurrencyFormatter.format(
					gv.getDouble("loanAmount")).toString()
					+ " " + gv.getString("currencyUomId")).setParent(row);
			GenericValue statusIdGV = delegator.findByPrimaryKey("StatusItem",
					UtilMisc.toMap("statusId", gv.getString("statusId")));
			new Label(statusIdGV.getString("description")).setParent(row);

			/* Actions */
			Toolbarbutton actionToolbarbutton =  new Toolbarbutton("EMI Info");
                actionToolbarbutton.addEventListener("onClick", new EventListener() {
                                public void onEvent(Event event) throws Exception {
                                    loanManagementController.showEMIInfo(event,gv);
                                }
                            });
            if(!gv.getString("statusId").equals("EL_ADM_APPROVED")){
                        actionToolbarbutton.setDisabled(true);
                            }
             actionToolbarbutton.setParent(row);

			if (gv.getDouble("hr_period") != null) {
				Integer hrPeriod = gv.getDouble("hr_period").intValue();
				new Label(hrPeriod.toString()).setParent(row);
			} else {
				new Label("").setParent(row);
			}
			if(gv.getDouble("acceptedAmount") != null){
			new Label(com.ndz.zkoss.util.CurrencyFormatter.format(
					gv.getDouble("acceptedAmount")).toString()
					+ " " + gv.getString("currencyUomId")).setParent(row);
			}else{
				new Label("").setParent(row);
			}
			if(gv.getDouble("rejectedAmount") != null){
			new Label(com.ndz.zkoss.util.CurrencyFormatter.format(
					gv.getDouble("rejectedAmount")).toString()
					+ " " + gv.getString("currencyUomId")).setParent(row);
			}else{
				new Label("").setParent(row);
			}

			new Label(com.ndz.zkoss.util.CurrencyFormatter.format(
					gv.getDouble("emi")).toString()).setParent(row);

			if (gv.getString("employeeComment") != null) {
				new Label(gv.getString("employeeComment").toString())
						.setParent(row);
			} else {
				new Label("").setParent(row);
			}
			if (gv.getString("hr_comment") != null) {
				new Label(gv.getString("hr_comment").toString()).setParent(row);
			} else {
				new Label("").setParent(row);
			}
			if (gv.getString("adminComment") != null) {
				new Label(gv.getString("adminComment").toString())
						.setParent(row);
			} else {
				new Label("").setParent(row);
			}
			new Label(com.ndz.zkoss.util.CurrencyFormatter.format(
					gv.getDouble("interest")).toString()).setParent(row);

			org.ofbiz.entity.GenericValue personGV1 = delegator
					.findByPrimaryKey("Person", UtilMisc.toMap("partyId", gv
							.getString("updatedBy")));
			new Label(personGV1.getString("firstName") + " "
					+ personGV1.getString("lastName")).setParent(row);
			String updatedDate = null;
			if (gv.getTimestamp("updateDate") != null) {
				java.text.SimpleDateFormat formater = new java.text.SimpleDateFormat(
						"dd-MM-yyyy HH:mm:ss");
				updatedDate = formater.format(gv.getTimestamp("updateDate"));
				new Label(updatedDate.toString()).setParent(row);
			} else
				new Label("").setParent(row);

			row.addEventListener("onDoubleClick", new EventListener() {
				public void onEvent(Event event) throws Exception {
					if (((!isAdmin || both) && ((gv.getString("statusId").equals("EL_SUBMITTED"))))) {
						loanManagementController.showApproveLoanWindow(event,gv);
						
					} else if (((!isAdmin) && ((gv.getString("statusId").equals("EL_MGR_APPROVED"))))
							|| (!isAdmin && ((gv.getString("statusId").equals("EL_MGR_REJECTED"))))) {
						Messagebox.show("Loan is Already Approved/Rejected","Warning", 1, null);
					}
					if (((isAdmin || both) && ((gv.getString("statusId").equals("EL_MGR_APPROVED"))))) {
						loanManagementController.showApproveLoanWindow(event,gv);
					} else if (((isAdmin || both) && ((gv.getString("statusId").equals("EL_ADM_REJECTED"))))
							|| ((isAdmin || both) && ((gv.getString("statusId").equals("EL_ADM_APPROVED"))))) {
						Messagebox.show("Loan is Already Approved/Rejected","Warning", 1, null);
					}
				}

			});

		}
	}
	RowRenderer tableRenderer = new MyRowRenderer();
]]>
</zscript>
		<separator />
		<div id="results" visible="false">
			<h:table width="99%" style="border:0px" cellspacing="0px"
				cellpadding="0px">
				<h:tr>
					<h:td width="90%">
						<label value="${c:l('HRMS_SEARCHRESULTS') }"></label>
					</h:td>
					<h:td width="10%" style="text-align:right">
						<paging id="paging" width="100%" />
					</h:td>
				</h:tr>
			</h:table>
			<grid id="dataGrid" rowRenderer="${tableRenderer }">
				<columns menupopup="auto">
					<column label="${c:l('Hrms_LoanId') }" />
					<column id="columnEmployeeId"
						label="Employee Id - Name" />
					<column label="${c:l('Hrms_LoanType') }" />
					<column
						label="${c:l('HumanResLeaveSummaryFromDate')}" />
					<column
						label="${c:l('HumanResLeaveSummaryThruDate')}" />
					<column label="${c:l('Hrms_LoanAmount') }" />
					<!--<column
						label="${c:l('FormFieldTitle_managerPositionId') }" />-->
					<column label="${c:l('Hrms_LoanStatus') }" />
                    <column label="Actions" />
					<column label="${c:l('Hrms_Period') }"
						visible="false" />
					<column label="${c:l('Hrms_AcceptedAmount') }"
						visible="false" />
					<column label="${c:l('Hrms_RejectedAmount') }"
						visible="false" />
					<column label="${c:l('Hrms_EMI') }" visible="false" />
					<column label="Employee Comments" visible="false" />
					<column label="Manager Comments" visible="false" />
					<column label="Admin Comments" visible="false" />
					<column label="${c:l('Hrms_Interest') }"
						visible="false" />
					<column label="${c:l('Hrms_UpdatedBy') }"
						visible="false" />
					<column label="Updated Date" visible="false" />
				</columns>
			</grid>
		</div>
		<zscript>
	Events
			.postEvent("onClick", searchPanel.getFellow("searchPerCompany"),
					null);
</zscript>
	</window>
</zk>