<?component name="findbox" macroURI="../macros/textfindMacro.zul" id="macro1"?>
<?component  list="${loanTypesList}" renderer="${loanTypeItemRenderer}" name="selectbox" macroURI="../macros/findselectbox.zul" id="macro2"?>
<?taglib uri="http://www.zkoss.org/dsp/web/core" prefix="c"?>
<zk xmlns:h="http://www.zkoss.org/2005/zk/native">
<zscript>
    import org.zkoss.zk.ui.event.EventListener;
    import com.ndz.controller.*;
    import org.ofbiz.entity.*;
    import org.ofbiz.base.util.*;
    Toolbarbutton allocateLoanBtn = arg.get("allocateLoanBtn");
    List loanTypes = null;
    GenericDelegator delegator =
    com.ndz.zkoss.util.HrmsInfrastructure.getDelegator();//GenericDelegator.getGenericDelegator("default");
    loanTypes = delegator.findByAnd("Enumeration",
    UtilMisc.toMap("enumTypeId", "ELOAN_TYPE"));

    loanTypes.add(0, null);
    loanTypesArray = loanTypes.toArray(new GenericValue[loanTypes.size()]);
    SimpleListModel loanTypesList = new SimpleListModel(loanTypesArray);

    public class LoanTypeItemRenderer implements ListitemRenderer {

    public LoanTypeItemRenderer() {
    }

    public void render(Listitem li, Object data) {
    if (data instanceof GenericValue) {
    GenericValue val = (GenericValue) data;
    li.setLabel(val.getString("description"));
    li.setValue(val.getString("enumId"));
    }
    }
    }
    ListitemRenderer loanTypeItemRenderer = new LoanTypeItemRenderer();
    SearchController controller = new SearchController();
</zscript>
<window id="searchPanel" apply="${controller}"
        onCreate="activateSearch()">
    <custom-attributes entityName="ELoanLimit"></custom-attributes>
    <separator height="10px"></separator>
    <h:table width="100%">
        <div align="center">
            <h:tr height="50px">
                <h:td align="center">
                    <selectbox value="${values}"
                               fieldLabel="${c:l('Hrms_LoanType') }" name="loanType"
                            />
                </h:td>
            </h:tr>
        </div>
    </h:table>
    <box width="100%" height="30px" align="center">
        <hbox>
            <button label="${c:l('HumanResSearch') }" mold="os"
                    id="searchPerCompany"
                    onClick="results.setVisible(true);results.setFocus(true)">
            </button>
            <button label="${c:l('HRMS_ResetButton') }" >
                <attribute name="onClick">
                    results.setVisible(false);
                    Listbox lb = (Listbox) searchPanel.getFellow("macro2")
                    .getFellow("loanType");
                    lb.setSelectedIndex(0);
                    Events.postEvent("onClick",allocateLoanBtn,null);
                </attribute>
            </button>
        </hbox>
    </box>
    <zscript>
        void activateSearch() {
        Events.postEvent("onClick", searchPerCompany, null);
        }
    </zscript>
    <zscript>
    <![CDATA[
              
        import org.ofbiz.base.util.*;
        class MyRowRenderer implements RowRenderer {

        MyRowRenderer() {
        }

        public void render(Row row, Object data) {
        org.ofbiz.entity.GenericValue gv = ((org.ofbiz.entity.GenericValue) data);
        row.setTooltiptext("DoubleClick To Edit/Update");
        new Label(gv.getString("limitId")).setParent(row);

        GenericValue loanTypeGV = delegator.findByPrimaryKey("Enumeration",
        UtilMisc.toMap("enumId", gv.getString("loanType")));
        if(loanTypeGV!=null){
        new Label(loanTypeGV.getString("description")).setParent(row);
        }
        else
        new Label(" ").setParent(row);


        GenericValue emplPositionGV = delegator.findByPrimaryKey("EmplPositionType",UtilMisc.toMap("emplPositionTypeId",gv.getString("emplPositionTypeId")));
        if(emplPositionGV != null)
			new Label(emplPositionGV.getString("description")).setParent(row);
		else
			new Label("").setParent(row);
        new Label(gv.getString("positionCategory")).setParent(row);
		new Label(gv.getString("employeeType")).setParent(row);
		new Label(com.ndz.zkoss.util.CurrencyFormatter.format(
        gv.getDouble("loanAmount")).toString()
        + " " + gv.getString("currencyUomId")).setParent(row);
        java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("dd-MM-yyyy");
        if (gv.getDate("fromDate") != null) {
        new Label(sdf.format(gv.getDate("fromDate"))).setParent(row);
        } else {
        new Label("").setParent(row);
        }
        if (gv.getDate("thruDate") != null) {
        new Label(sdf.format(gv.getDate("thruDate"))).setParent(row);
        } else {
        new Label("").setParent(row);
        }
        new Label(gv.getString("hr_comment")).setParent(row);

        if (gv.getDouble("interest") != null) {
        new Label(com.ndz.zkoss.util.CurrencyFormatter.format(gv.getDouble("interest"))).setParent(row);
        } else {
        new Label("").setParent(row);
        }
        if (gv.getDouble("hr_period") != null) {
        new Label(gv.getDouble("hr_period").toString()).setParent(row);
        } else {
        new Label("").setParent(row);
        }

        if (gv.getString("updatedBy") != null) {

        new Label(gv.getString("updatedBy")).setParent(row);
        } else {
        new Label("").setParent(row);
        }

        if (gv.getString("updatedBy") != null) {
        org.ofbiz.entity.GenericValue personGV1 = delegator
        .findByPrimaryKey(
        "Person",
        UtilMisc.toMap("partyId",gv.getString("updatedBy")));
        new Label(personGV1.getString("firstName") + " "
        + personGV1.getString("lastName")).setParent(row);
        } else {
        new Label("").setParent(row);
        }

        String updatedDate = null;
        if (gv.getTimestamp("lastUpdatedStamp") != null){
        java.text.SimpleDateFormat formater = new java.text.SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
        updatedDate =formater.format(gv.getTimestamp("lastUpdatedStamp"));
        new Label(updatedDate.toString()).setParent(row);
        //new Label((gv.getTimestamp("updateDate").getTime()).toString()).setParent(row);
        }else
        new Label("").setParent(row);

        row.addEventListener("onDoubleClick",
        new org.zkoss.zk.ui.event.EventListener() {
        public void onEvent(Event event) throws Exception {
        ConfigureLoanManagementController
        .showLoanLimitWindow(event, gv);
        }

        });
        Button img = new com.ndz.zkoss.HrmsButton();
        img.setLabel("Delete");
        img.setParent(row);
        img.setSclass("btnDelete");
        img.addEventListener("onClick", new EventListener() {

        public void onEvent(Event event) throws Exception {
        ConfigureLoanManagementController.deleteLoanLimit(event,
        gv, searchPerCompany);
        }
        });
        }
        }
        RowRenderer tableRenderer = new MyRowRenderer();
       ]]>
    </zscript>
    <separator/>
    <div id="results" visible="false">
        <h:table width="99%" style="border:0px" cellspacing="0px"
                 cellpadding="0px">
            <h:tr>
                <h:td width="90%">
                    <label value="${c:l('HRMS_SEARCHRESULTS') }"></label>
                </h:td>
                <h:td width="10%" style="text-align:right">
                    <paging id="paging" width="100%"/>
                </h:td>
            </h:tr>
        </h:table>
        <grid id="dataGrid" rowRenderer="${tableRenderer }">
            <columns menupopup="auto">
                <column label="Loan Limit Id"
                        visible="false"/>
                <column label="${c:l('Hrms_LoanType') }"/>
                <column label="${c:l('HRMS_POSITIONTYPE') }"/>
                <column label="${c:l('FormFieldTitle_positionCategories') }" width="110px" />
				<column label="${c:l('HRMS_EMPLOYEE_TYPE') }" width="110px" />
				<column label="${c:l('Hrms_LoanAmount') }"/>
                <column
                        label="${c:l('HumanResLeaveSummaryFromDate')}"/>
                <column
                        label="${c:l('HumanResLeaveSummaryThruDate')}"/>
                <column label="Comments"/>
                <column label="${c:l('Hrms_Interest') }"
                        visible="false"/>
                <column label="${c:l('Hrms_Period') }"
                        visible="false"/>
                <column label="Updated By Id"/>
                <column label="Updated By Name"/>
                <column label="Updated Date"/>

                <column label="Action" visible="true"/>
            </columns>
        </grid>
    </div>
</window>


</zk>